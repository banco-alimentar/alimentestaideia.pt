<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AlimentosJaDoados" xml:space="preserve">
    <value>Food donated</value>
  </data>
  <data name="Since" xml:space="preserve">
    <value>Since</value>
  </data>
  <data name="Atum" xml:space="preserve">
    <value>Tuna fish</value>
  </data>
  <data name="Azeite" xml:space="preserve">
    <value>Olive oil</value>
  </data>
  <data name="Açucar" xml:space="preserve">
    <value>Rice</value>
  </data>
  <data name="CodigoPostal" xml:space="preserve">
    <value>Postal Code</value>
  </data>
  <data name="ContacteNos" xml:space="preserve">
    <value>Contact us</value>
  </data>
  <data name="DescricaoDoCabaz" xml:space="preserve">
    <value>Basket description</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>E-mail *</value>
  </data>
  <data name="Empresa" xml:space="preserve">
    <value>Company</value>
  </data>
  <data name="EscolhaOBancoAlimentarParaOQualQuerDoar" xml:space="preserve">
    <value>Choose the Food Bank you want to donate to *</value>
  </data>
  <data name="EscolhaOsBensQueQuerDoar" xml:space="preserve">
    <value>Choose the products you want to donate</value>
  </data>
  <data name="Leite" xml:space="preserve">
    <value>Milk</value>
  </data>
  <data name="Morada" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="Nif" xml:space="preserve">
    <value>Tax number</value>
  </data>
  <data name="Nome" xml:space="preserve">
    <value>Name *</value>
  </data>
  <data name="Pais" xml:space="preserve">
    <value>Country *</value>
  </data>
  <data name="Particular" xml:space="preserve">
    <value>Private</value>
  </data>
  <data name="PreenchaOsSeusDados" xml:space="preserve">
    <value>Fill in your data</value>
  </data>
  <data name="Salsichas" xml:space="preserve">
    <value>Sausages</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>TOTAL:</value>
  </data>
  <data name="VerCabaz" xml:space="preserve">
    <value>See Basket</value>
  </data>
  <data name="Oleo" xml:space="preserve">
    <value>Cooking oil</value>
  </data>
  <data name="AceitoAPoliticaDePrivacidadeEDeProteccaoDeDados" xml:space="preserve">
    <value>I accept the Privacy and Data Protection Policy *</value>
  </data>
  <data name="AlimenteEstaIdeia" xml:space="preserve">
    <value>Feed this idea</value>
  </data>
  <data name="ASuaContribuicaoFazTodaADiferencaAjudeQuemMaisPrecisa" xml:space="preserve">
    <value>Your contribution makes all the difference. Please, help people in need.</value>
  </data>
  <data name="ASuaEmpresa" xml:space="preserve">
    <value>Your company</value>
  </data>
  <data name="ASuaMorada" xml:space="preserve">
    <value>Your address</value>
  </data>
  <data name="Cesto" xml:space="preserve">
    <value>Basket</value>
  </data>
  <data name="Comida" xml:space="preserve">
    <value>Food</value>
  </data>
  <data name="Doar" xml:space="preserve">
    <value>Donate</value>
  </data>
  <data name="EnviarDoacao" xml:space="preserve">
    <value>Donate</value>
  </data>
  <data name="EscrevaOQueVeAbaixo" xml:space="preserve">
    <value>Write the text you see bellow</value>
  </data>
  <data name="Fechar" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Linguagem" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="NaoSouUmRobo" xml:space="preserve">
    <value>I'm not a robot</value>
  </data>
  <data name="OSeuCodigoPostal" xml:space="preserve">
    <value>Your postal code</value>
  </data>
  <data name="OSeuEmail" xml:space="preserve">
    <value>Your e-mail</value>
  </data>
  <data name="OSeuNif" xml:space="preserve">
    <value>Your tax number</value>
  </data>
  <data name="OSeuNome" xml:space="preserve">
    <value>Your name</value>
  </data>
  <data name="OSeuPais" xml:space="preserve">
    <value>Your country</value>
  </data>
  <data name="PoliticaDePrivacidade" xml:space="preserve">
    <value>privacy and Data Protection Policy</value>
  </data>
  <data name="PretendeRecibo" xml:space="preserve">
    <value>Do you want a receipt?</value>
  </data>
  <data name="Saco" xml:space="preserve">
    <value>"~/images/saco.png"</value>
  </data>
  <data name="TituloHeader" xml:space="preserve">
    <value>"~/images/titulo_header.png"</value>
  </data>
  <data name="AgoraTambemJaPodePagarUsandoOSeuCartaoDeCredito" xml:space="preserve">
    <value>You can also pay
by credit card.</value>
  </data>
  <data name="AssimQueForRecebidoOSeuPagamentoSeraEnviadoParaOSeuEmailOReciboDaDoacao" xml:space="preserve">
    <value>Your payment receipt will be sent to your e-mail once we get the notification.</value>
  </data>
  <data name="CartaoDeCredito" xml:space="preserve">
    <value>Credit card</value>
  </data>
  <data name="Entidade" xml:space="preserve">
    <value>Entity</value>
  </data>
  <data name="EscolhaOSeuMeioDePagamento" xml:space="preserve">
    <value>Choose your payment method</value>
  </data>
  <data name="EstaReferenciaTambemFoiEnviadaParaOSeuEmail" xml:space="preserve">
    <value>This reference was also sent to your e-mail.</value>
  </data>
  <data name="FacaASuaDoacaoDeFormaSegura" xml:space="preserve">
    <value>Make your donation in a totally safe way.</value>
  </data>
  <data name="FacaASuaDoacaoUsandoAReferenciaMultibancoAbaixo" xml:space="preserve">
    <value>Make your donation using the reference bellow.</value>
  </data>
  <data name="Multibanco" xml:space="preserve">
    <value>Multibanco</value>
  </data>
  <data name="PagarRedUnicre" xml:space="preserve">
    <value>Pay with credit card</value>
  </data>
  <data name="Referencia" xml:space="preserve">
    <value>Reference payment</value>
  </data>
  <data name="Valor" xml:space="preserve">
    <value>Fee</value>
  </data>
  <data name="PayPal" xml:space="preserve">
    <value>PayPal</value>
  </data>
  <data name="MBWay" xml:space="preserve">
    <value>MBWay</value>
  </data>
  <data name="AgoraTambemJaPodePagarUsandoPayPal" xml:space="preserve">
    <value>You can also pay by PayPal.</value>
  </data>
  <data name="PagarPayPal" xml:space="preserve">
    <value>Pay with PayPal</value>
  </data>
  <data name="PagarMultibanco" xml:space="preserve">
    <value>Pay with Multibanco</value>
  </data>
  <data name="Captcha.TextboxMessage" xml:space="preserve">
    <value>Security Code as Number</value>
  </data>
  <data name="Captcha.TextboxMessageError" xml:space="preserve">
    <value>Please enter the security code as a number.</value>
  </data>
  <data name="DonationSubscriptionEnabled" xml:space="preserve">
    <value>I want to make this donation every ...</value>
  </data>
  <data name="DonationSubscriptionMessage" xml:space="preserve">
    <value>We currently support only creditcard payments for recurring donations, Thanks</value>
  </data>
  <data name="DonationSubscriptionMessage_Duplicate[1]" xml:space="preserve">
    <value>We currently support only creditcard payments for recurring donations, Thanks</value>
  </data>
  <data name="Since_Duplicate[1]" xml:space="preserve">
    <value>Since</value>
  </data>
  <data name="SubscriptionAuthentication" xml:space="preserve">
    <value>You need to be logged in before you can create a subscription.</value>
  </data>
  <data name="IntroduzirValor" xml:space="preserve">
    <value>You can enter the total in Euros and the application calculates the food distribution automatically.</value>
  </data>
  <data name="DonationSubscriptionConditions" xml:space="preserve">
    <value>You can cancel and manage your regular donations at any time in your account.</value>
  </data>
  <data name="Amount" xml:space="preserve">
    <value>Cash donation amount</value>
  </data>
  <data name="MaxAmount" xml:space="preserve">
    <value>The maximum value of donation is € 5000
</value>
  </data>
</root>