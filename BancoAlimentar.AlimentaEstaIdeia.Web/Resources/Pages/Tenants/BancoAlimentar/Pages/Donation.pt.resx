<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AlimentosJaDoados" xml:space="preserve">
    <value>Alimentos já dados</value>
  </data>
  <data name="Since" xml:space="preserve">
    <value>Desde</value>
  </data>
  <data name="Atum" xml:space="preserve">
    <value>Atum</value>
  </data>
  <data name="Azeite" xml:space="preserve">
    <value>Azeite</value>
  </data>
  <data name="Açucar" xml:space="preserve">
    <value>Arroz</value>
  </data>
  <data name="CodigoPostal" xml:space="preserve">
    <value>Código Postal</value>
  </data>
  <data name="ContacteNos" xml:space="preserve">
    <value>Entre em contacto connosco</value>
  </data>
  <data name="DescricaoDoCabaz" xml:space="preserve">
    <value>Descrição da cesta</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>E-mail *</value>
  </data>
  <data name="Empresa" xml:space="preserve">
    <value>Empresa</value>
  </data>
  <data name="EscolhaOBancoAlimentarParaOQualQuerDoar" xml:space="preserve">
    <value>Escolha o Banco Alimentar para o qual deseja doar</value>
  </data>
  <data name="EscolhaOsBensQueQuerDoar" xml:space="preserve">
    <value>Escolha os bens que deseja doar...</value>
  </data>
  <data name="Leite" xml:space="preserve">
    <value>Leite</value>
  </data>
  <data name="Morada" xml:space="preserve">
    <value>Morada</value>
  </data>
  <data name="Nif" xml:space="preserve">
    <value>NIF</value>
  </data>
  <data name="Nome" xml:space="preserve">
    <value>Nome *</value>
  </data>
  <data name="Pais" xml:space="preserve">
    <value>País</value>
  </data>
  <data name="Particular" xml:space="preserve">
    <value>Particular</value>
  </data>
  <data name="PreenchaOsSeusDados" xml:space="preserve">
    <value>Preencha os seus dados</value>
  </data>
  <data name="Salsichas" xml:space="preserve">
    <value>Salsichas</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>TOTAL:</value>
  </data>
  <data name="VerCabaz" xml:space="preserve">
    <value>Ver Cabaz</value>
  </data>
  <data name="Oleo" xml:space="preserve">
    <value>Óleo</value>
  </data>
  <data name="AceitoAPoliticaDePrivacidadeEDeProteccaoDeDados" xml:space="preserve">
    <value>Aceito a Política de Privacidade e Proteção de Dados *</value>
  </data>
  <data name="AlimenteEstaIdeia" xml:space="preserve">
    <value>Alimente esta ideia</value>
  </data>
  <data name="ASuaContribuicaoFazTodaADiferencaAjudeQuemMaisPrecisa" xml:space="preserve">
    <value>Sua contribuição faz toda a diferença! Ajude aqueles que mais precisam.</value>
  </data>
  <data name="ASuaEmpresa" xml:space="preserve">
    <value>Sua empresa</value>
  </data>
  <data name="ASuaMorada" xml:space="preserve">
    <value>Seu endereço</value>
  </data>
  <data name="Cesto" xml:space="preserve">
    <value>Cesto</value>
  </data>
  <data name="Comida" xml:space="preserve">
    <value>Alimento</value>
  </data>
  <data name="Doar" xml:space="preserve">
    <value>Doar</value>
  </data>
  <data name="EnviarDoacao" xml:space="preserve">
    <value>Enviar Doação</value>
  </data>
  <data name="EscrevaOQueVeAbaixo" xml:space="preserve">
    <value>Escreva o que você vê abaixo</value>
  </data>
  <data name="Fechar" xml:space="preserve">
    <value>Fechar</value>
  </data>
  <data name="Linguagem" xml:space="preserve">
    <value>Idioma</value>
  </data>
  <data name="NaoSouUmRobo" xml:space="preserve">
    <value>Eu não sou um robô.</value>
  </data>
  <data name="OSeuCodigoPostal" xml:space="preserve">
    <value>Seu Código Postal</value>
  </data>
  <data name="OSeuEmail" xml:space="preserve">
    <value>Seu e-mail</value>
  </data>
  <data name="OSeuNif" xml:space="preserve">
    <value>Seu NIF</value>
  </data>
  <data name="OSeuNome" xml:space="preserve">
    <value>Seu nome</value>
  </data>
  <data name="OSeuPais" xml:space="preserve">
    <value>Seu país</value>
  </data>
  <data name="PoliticaDePrivacidade" xml:space="preserve">
    <value>Política de privacidade</value>
  </data>
  <data name="PretendeRecibo" xml:space="preserve">
    <value>Quer recibo?</value>
  </data>
  <data name="Saco" xml:space="preserve">
    <value>"~/imagens/saco.png"</value>
  </data>
  <data name="TituloHeader" xml:space="preserve">
    <value>"~/imagens/tituloheader.png"</value>
  </data>
  <data name="AgoraTambemJaPodePagarUsandoOSeuCartaoDeCredito" xml:space="preserve">
    <value>Agora você também pode doar usando
seu cartão de crédito.</value>
  </data>
  <data name="AssimQueForRecebidoOSeuPagamentoSeraEnviadoParaOSeuEmailOReciboDaDoacao" xml:space="preserve">
    <value>Uma vez que seu pagamento é recebido, o recibo de doação será enviado para o seu e-mail.</value>
  </data>
  <data name="CartaoDeCredito" xml:space="preserve">
    <value>Cartão de crédito</value>
  </data>
  <data name="Entidade" xml:space="preserve">
    <value>Entidade</value>
  </data>
  <data name="EscolhaOSeuMeioDePagamento" xml:space="preserve">
    <value>Escolha seus meios de pagamento</value>
  </data>
  <data name="EstaReferenciaTambemFoiEnviadaParaOSeuEmail" xml:space="preserve">
    <value>Essa referência também foi enviada para o seu e-mail.</value>
  </data>
  <data name="FacaASuaDoacaoDeFormaSegura" xml:space="preserve">
    <value>Faça sua doação em segurança.</value>
  </data>
  <data name="FacaASuaDoacaoUsandoAReferenciaMultibancoAbaixo" xml:space="preserve">
    <value>Faça sua doação usando a referência do caixa eletrônico abaixo.</value>
  </data>
  <data name="Multibanco" xml:space="preserve">
    <value>Caixa automático</value>
  </data>
  <data name="PagarRedUnicre" xml:space="preserve">
    <value>Doe com cartão de crédito</value>
  </data>
  <data name="Referencia" xml:space="preserve">
    <value>Referência</value>
  </data>
  <data name="Valor" xml:space="preserve">
    <value>Valor</value>
  </data>
  <data name="PayPal" xml:space="preserve">
    <value>PayPal</value>
  </data>
  <data name="MBWay" xml:space="preserve">
    <value>MBWay</value>
  </data>
  <data name="AgoraTambemJaPodePagarUsandoPayPal" xml:space="preserve">
    <value>Agora você também pode doar usando PayPal.</value>
  </data>
  <data name="PagarPayPal" xml:space="preserve">
    <value>Doe com PayPal</value>
  </data>
  <data name="PagarMultibanco" xml:space="preserve">
    <value>Doe com multibanco</value>
  </data>
  <data name="Captcha.TextboxMessage" xml:space="preserve">
    <value>Código de segurança como número</value>
  </data>
  <data name="Captcha.TextboxMessageError" xml:space="preserve">
    <value>Por favor, digite o número da imagem.</value>
  </data>
  <data name="DonationSubscriptionEnabled" xml:space="preserve">
    <value>Eu quero fazer esta doação regularmente a cada ...</value>
  </data>
  <data name="DonationSubscriptionMessage" xml:space="preserve">
    <value>Atualmente, suportamos apenas pagamentos de cartão de crédito para doações recorrentes, obrigado</value>
  </data>
  <data name="DonationSubscriptionMessage_Duplicate[1]" xml:space="preserve">
    <value>Atualmente, suportamos apenas pagamentos de cartão de crédito para doações recorrentes, obrigado</value>
  </data>
  <data name="Since_Duplicate[1]" xml:space="preserve">
    <value>Desde</value>
  </data>
  <data name="SubscriptionAuthentication" xml:space="preserve">
    <value>You need to be logged in before you can create a subscription.</value>
  </data>
  <data name="IntroduzirValor" xml:space="preserve">
    <value>Pode introduzir o total em Euros e a aplicação calcula a distribuição de alimentos automaticamente.</value>
  </data>
  <data name="DonationSubscriptionConditions" xml:space="preserve">
    <value>Poderá cancelar e gerir as suas doações regulares a qualquer momento na sua conta.</value>
  </data>
  <data name="Amount" xml:space="preserve">
    <value>Valor</value>
  </data>
  <data name="MaxAmount" xml:space="preserve">
    <value>O valor maxim de doação é de € 5000
</value>
  </data>
</root>